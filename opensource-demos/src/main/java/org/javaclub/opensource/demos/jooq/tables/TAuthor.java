/**
 * This class is generated by jOOQ
 */
package org.javaclub.opensource.demos.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = "http://jooq.sourceforge.net",
                            comments = "This class is generated by jOOQ")
public class TAuthor extends org.jooq.impl.UpdatableTableImpl<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord> {

	private static final long serialVersionUID = -323260995;

	/**
	 * The singleton instance of t_author
	 */
	public static final org.javaclub.opensource.demos.jooq.tables.TAuthor T_AUTHOR = new org.javaclub.opensource.demos.jooq.tables.TAuthor();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord> __RECORD_TYPE = org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final org.jooq.TableField<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.lang.Integer> ID = new org.jooq.impl.TableFieldImpl<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.lang.Integer>("id", org.jooq.impl.SQLDataType.INTEGER, T_AUTHOR);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.lang.String> FIRST_NAME = new org.jooq.impl.TableFieldImpl<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.lang.String>("first_name", org.jooq.impl.SQLDataType.VARCHAR, T_AUTHOR);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.lang.String> LAST_NAME = new org.jooq.impl.TableFieldImpl<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.lang.String>("last_name", org.jooq.impl.SQLDataType.VARCHAR, T_AUTHOR);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.sql.Date> DATE_OF_BIRTH = new org.jooq.impl.TableFieldImpl<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.sql.Date>("date_of_birth", org.jooq.impl.SQLDataType.DATE, T_AUTHOR);

	/**
	 * An uncommented item
	 */
	public static final org.jooq.TableField<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.lang.Integer> YEAR_OF_BIRTH = new org.jooq.impl.TableFieldImpl<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord, java.lang.Integer>("year_of_birth", org.jooq.impl.SQLDataType.INTEGER, T_AUTHOR);

	/**
	 * No further instances allowed
	 */
	private TAuthor() {
		super("t_author", org.javaclub.opensource.demos.jooq.TestJooq.TEST_JOOQ);
	}

	@Override
	public org.jooq.UniqueKey<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord> getMainKey() {
		return org.javaclub.opensource.demos.jooq.Keys.KEY_t_author_PRIMARY;
	}

	@Override
	@SuppressWarnings("unchecked")
	public java.util.List<org.jooq.UniqueKey<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<org.javaclub.opensource.demos.jooq.tables.records.TAuthorRecord>>asList(org.javaclub.opensource.demos.jooq.Keys.KEY_t_author_PRIMARY);
	}
}
